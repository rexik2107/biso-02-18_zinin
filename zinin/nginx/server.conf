# server {
#     #listen 80;
#     listen 80;
#     #server_name 127.0.0.1;
#
#     #server_name localhost;
#     proxy_buffers 8 16k;
#     proxy_buffer_size 32k;
#
#     location / {
#         proxy_pass http://127.0.0.1:8080;
#         proxy_redirect default;
#
#         proxy_set_header Host $host;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#
#
#     }
#     location /ifs {
#       proxy_pass http://ifs;
#       proxy_redirect default;
#
#       proxy_set_header Host $host;
#       proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#
#     }
# }
upstream web {
  ip_hash;
  server web:8000;
}

server {

    location / {
        proxy_pass http://web/;
    }
    listen 8000;
    server_name 194.87.94.127;
}

#   server {
#     listen 8000 default_server;
#     #listen 0.0.0.0:80;
#     #listen 127.0.0.1:80;
#     #client_max_body_size 4G;
#     #listen 127.0.0.1:80;
#     #server_name localhost;
#
#     #server_name 127.0.0.1;
#
# #     location / {
# #       proxy_set_header Host $http_host;
# #       proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
# #       proxy_redirect off;
# #       proxy_buffering off;
# #       proxy_pass http://aiohttp;
# #
# #     }
#
#     location / {
#             proxy_pass                          http://127.0.0.1:8000;
#             proxy_set_header                    Host $host;
#             proxy_set_header X-Forwarded-Host   $server_name;
#             proxy_set_header X-Real-IP          $remote_addr;
#         }
#
# #     location /static {
# #       # path for static files
# #       root /path/to/app/static;
# #     }
#
#   }
#   upstream aiohttp {
#     # fail_timeout=0 means we always retry an upstream even if it failed
#     # to return a good HTTP response
#
#     # Unix domain servers
#     #server unix:/tmp/example_1.sock fail_timeout=0;
#     #server unix:/tmp/example_2.sock fail_timeout=0;
#     #server unix:/tmp/example_3.sock fail_timeout=0;
#     #server unix:/tmp/example_4.sock fail_timeout=0;
#
#     # Unix domain sockets are used in this example due to their high performance,
#     # but TCP/IP sockets could be used instead:
#     server 127.0.0.1:8080 fail_timeout=0;
#     # server 127.0.0.1:8082 fail_timeout=0;
#     # server 127.0.0.1:8083 fail_timeout=0;
#     # server 127.0.0.1:8084 fail_timeout=0;
#   }
